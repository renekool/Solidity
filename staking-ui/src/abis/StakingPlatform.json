{
  "contractName": "StakingPlatform",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_apr",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FAKE_RWD_PRICE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "accelerator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "apr",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reward",
      "outputs": [
        {
          "internalType": "contract RewardToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakerAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastUpdateTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "staking",
      "outputs": [
        {
          "internalType": "contract StakingToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "calculateRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_apr",
          "type": "uint256"
        }
      ],
      "name": "setAPR",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_accelerator",
          "type": "uint256"
        }
      ],
      "name": "setAccelerator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getRewardValueInUSDT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_apr\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FAKE_RWD_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accelerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"apr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calculateRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getRewardValueInUSDT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reward\",\"outputs\":[{\"internalType\":\"contract RewardToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_apr\",\"type\":\"uint256\"}],\"name\":\"setAPR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_accelerator\",\"type\":\"uint256\"}],\"name\":\"setAccelerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakerAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staking\",\"outputs\":[{\"internalType\":\"contract StakingToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contrato para hacer staking de tokens y generar recompensas seg\\u00fan un APR configurable.      Adem\\u00e1s, se agrega un factor de aceleraci\\u00f3n (accelerator) para simular recompensas m\\u00e1s r\\u00e1pidas.\",\"kind\":\"dev\",\"methods\":{\"calculateRewards(address)\":{\"params\":{\"user\":\"Direcci\\u00f3n del usuario.\"},\"returns\":{\"_0\":\"La cantidad total de recompensas acumuladas. F\\u00f3rmula base:   rewards = recompensas previas +     (timeDifference * staker.amount * apr * accelerator) / (10000 * SECONDS_IN_YEAR) Donde:   - apr/10000 es el APR anual en forma fraccionaria (por ejemplo, 1250 -> 0.125).   - accelerator = 1 => sin aceleraci\\u00f3n, 2 => doble de r\\u00e1pido, etc.\"}},\"constructor\":{\"details\":\"Constructor que inicializa el contrato.\",\"params\":{\"_apr\":\"APR inicial en basis points (por ejemplo, 1250 para 12.50% anual).\",\"_rewardToken\":\"Direcci\\u00f3n del contrato RewardToken.\",\"_stakingToken\":\"Direcci\\u00f3n del contrato StakingToken.\"}},\"getRewardValueInUSDT(address)\":{\"params\":{\"user\":\"Direcci\\u00f3n del usuario.\"},\"returns\":{\"_0\":\"El valor de las recompensas en USDT. Para pruebas, se utiliza un valor ficticio (FAKE_RWD_PRICE) que define el precio de RWD en USDT. En este caso, FAKE_RWD_PRICE = 5000000, lo que significa que 1 RWD equivale a $0.05.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAPR(uint256)\":{\"params\":{\"_apr\":\"Nuevo APR en basis points (por ejemplo, 3500 para 35.00% anual).\"}},\"setAccelerator(uint256)\":{\"params\":{\"_accelerator\":\"Nuevo factor de aceleraci\\u00f3n (1 = sin aceleraci\\u00f3n).\"}},\"stake(uint256)\":{\"params\":{\"amount\":\"Cantidad de tokens a apostar.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"StakingPlatform\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calculateRewards(address)\":{\"notice\":\"Calcula las recompensas acumuladas para un usuario usando APR y un factor de aceleraci\\u00f3n.\"},\"getRewardValueInUSDT(address)\":{\"notice\":\"Obtiene el valor en USDT de las recompensas acumuladas para un usuario.\"},\"setAPR(uint256)\":{\"notice\":\"Permite al owner actualizar el APR. Antes de asignar el nuevo APR, liquida las recompensas acumuladas de todos los stakers usando el APR anterior y actualiza su lastUpdateTime.\"},\"setAccelerator(uint256)\":{\"notice\":\"Permite al owner actualizar el factor de aceleraci\\u00f3n (accelerator).\"},\"stake(uint256)\":{\"notice\":\"Permite a los usuarios apostar tokens.\"},\"unStake()\":{\"notice\":\"Permite a los usuarios retirar sus tokens apostados junto con las recompensas.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/StakingPlatform.sol\":\"StakingPlatform\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/src/contracts/RewardToken.sol\":{\"keccak256\":\"0x71f064e97952048d3d2eb850340eb180df34ba57b762e8b8015ddbea2b382ab2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://398b6197ce4a313160ef6abd64f7dee2d8070a753d46344eb0f5c65d1a09893d\",\"dweb:/ipfs/QmQmM74ModTh7ji1U3LpkTn6vqBpw2XuqnD8ayN4mrbWss\"]},\"project:/src/contracts/StakingPlatform.sol\":{\"keccak256\":\"0x1c49b90275d3491ce643595cb77ef8e88d74d7c9a725231952d64b888fe23656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0869184482e0773c8054c5afce605000ef907b2cd01c8393656a4ad024d29b3d\",\"dweb:/ipfs/QmcBuAnNWnJBazHR4X32PdmRMTMd2uP4hJDRvphcCrSAcG\"]},\"project:/src/contracts/StakingToken.sol\":{\"keccak256\":\"0x7604f64243b468c9167d57d2d440cdb4fd35ed23bf7b24808001df5b4b6311b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37ff3a47fb95ef7900564114bf3cafe08b77ca2d112f9b90866616c37e7fcb60\",\"dweb:/ipfs/QmZYJ96uUK68q2N1wQiqnRdTFPtPdttMq4p3s54xEKGEg6\"]}},\"version\":1}",
  "bytecode": "0x6080604052620186a060055534801561001757600080fd5b50604051610d31380380610d31833981016040819052610036916100e7565b61003f3361007b565b60018055600280546001600160a01b039485166001600160a01b0319918216179091556003805493909416921691909117909155600455610122565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100e257600080fd5b919050565b6000806000606084860312156100fb578283fd5b610104846100cb565b9250610112602085016100cb565b9150604084015190509250925092565b610c00806101316000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806373cf575a116100a25780639168ae72116100715780639168ae72146101eb578063a694fc3a14610235578063f2fde38b14610248578063f6e2d02b1461025b578063fd75c1361461026e57600080fd5b806373cf575a146101b6578063817b1cd2146101be578063854303cf146101c75780638da5cb5b146101da57600080fd5b80634cf088d9116100de5780634cf088d91461017f57806357ded9c91461019257806364ab86751461019b578063715018a6146101ae57600080fd5b80631c05ca8d146101105780631ce485a41461012c578063228cb73314610141578063459598a21461016c575b600080fd5b61011960055481565b6040519081526020015b60405180910390f35b61013f61013a366004610ade565b610278565b005b600354610154906001600160a01b031681565b6040516001600160a01b039091168152602001610123565b61015461017a366004610ade565b6102b0565b600254610154906001600160a01b031681565b61011960045481565b6101196101a9366004610a90565b6102da565b61013f61036d565b61013f6103a3565b61011960065481565b61013f6101d5366004610ade565b6105a8565b6000546001600160a01b0316610154565b61021a6101f9366004610a90565b60076020526000908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610123565b61013f610243366004610ade565b610657565b61013f610256366004610a90565b610835565b610119610269366004610a90565b6108d0565b610119624c4b4081565b6000546001600160a01b031633146102ab5760405162461bcd60e51b81526004016102a290610af6565b60405180910390fd5b600555565b600881815481106102c057600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03811660009081526007602052604081208054610302576002015492915050565b60008160010154426103149190610b82565b90506103266301e13380612710610b63565b60055460045484546103389085610b63565b6103429190610b63565b61034c9190610b63565b6103569190610b43565b82600201546103659190610b2b565b949350505050565b6000546001600160a01b031633146103975760405162461bcd60e51b81526004016102a290610af6565b6103a160006108fc565b565b600260015414156103f65760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102a2565b600260015533600090815260076020526040902080546104585760405162461bcd60e51b815260206004820152601e60248201527f43616e746964616420696e76616c69646120706172612072657469726172000060448201526064016102a2565b610461336102da565b426001830155815460006002840181905580845560068054839290610487908490610b82565b909155505060025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156104d857600080fd5b505af11580156104ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105109190610abe565b5060035460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561055d57600080fd5b505af1158015610571573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105959190610abe565b5061059f3361094c565b50506001805550565b6000546001600160a01b031633146105d25760405162461bcd60e51b81526004016102a290610af6565b60005b6008548110156106515760006008828154811061060257634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031680835260079091526040909120909150610632826102da565b600282015542600190910155508061064981610b99565b9150506105d5565b50600455565b600260015414156106aa5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102a2565b6002600155806106fc5760405162461bcd60e51b815260206004820152601e60248201527f43616e746964616420696e76616c6964612070617261207374616b696e67000060448201526064016102a2565b336000908152600760205260409020805461075457600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b031916331790555b80541561076a57610764336102da565b60028201555b4260018201556002546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156107c257600080fd5b505af11580156107d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fa9190610abe565b508181600001600082825461080f9190610b2b565b9250508190555081600660008282546108289190610b2b565b9091555050600180555050565b6000546001600160a01b0316331461085f5760405162461bcd60e51b81526004016102a290610af6565b6001600160a01b0381166108c45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102a2565b6108cd816108fc565b50565b6000806108dc836102da565b905060006305f5e1006108f2624c4b4084610b63565b6103659190610b43565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60085460005b81811015610a8b57826001600160a01b03166008828154811061098557634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610a795760086109ad600184610b82565b815481106109cb57634e487b7160e01b600052603260045260246000fd5b600091825260209091200154600880546001600160a01b039092169183908110610a0557634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506008805480610a5257634e487b7160e01b600052603160045260246000fd5b600082815260209020810160001990810180546001600160a01b0319169055019055505050565b80610a8381610b99565b915050610952565b505050565b600060208284031215610aa1578081fd5b81356001600160a01b0381168114610ab7578182fd5b9392505050565b600060208284031215610acf578081fd5b81518015158114610ab7578182fd5b600060208284031215610aef578081fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610b3e57610b3e610bb4565b500190565b600082610b5e57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610b7d57610b7d610bb4565b500290565b600082821015610b9457610b94610bb4565b500390565b6000600019821415610bad57610bad610bb4565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220ec8636c2a891ab386ed25aceec7a6bfdebbc0602d8f506f2c9d59fd06f44be3964736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c806373cf575a116100a25780639168ae72116100715780639168ae72146101eb578063a694fc3a14610235578063f2fde38b14610248578063f6e2d02b1461025b578063fd75c1361461026e57600080fd5b806373cf575a146101b6578063817b1cd2146101be578063854303cf146101c75780638da5cb5b146101da57600080fd5b80634cf088d9116100de5780634cf088d91461017f57806357ded9c91461019257806364ab86751461019b578063715018a6146101ae57600080fd5b80631c05ca8d146101105780631ce485a41461012c578063228cb73314610141578063459598a21461016c575b600080fd5b61011960055481565b6040519081526020015b60405180910390f35b61013f61013a366004610ade565b610278565b005b600354610154906001600160a01b031681565b6040516001600160a01b039091168152602001610123565b61015461017a366004610ade565b6102b0565b600254610154906001600160a01b031681565b61011960045481565b6101196101a9366004610a90565b6102da565b61013f61036d565b61013f6103a3565b61011960065481565b61013f6101d5366004610ade565b6105a8565b6000546001600160a01b0316610154565b61021a6101f9366004610a90565b60076020526000908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610123565b61013f610243366004610ade565b610657565b61013f610256366004610a90565b610835565b610119610269366004610a90565b6108d0565b610119624c4b4081565b6000546001600160a01b031633146102ab5760405162461bcd60e51b81526004016102a290610af6565b60405180910390fd5b600555565b600881815481106102c057600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03811660009081526007602052604081208054610302576002015492915050565b60008160010154426103149190610b82565b90506103266301e13380612710610b63565b60055460045484546103389085610b63565b6103429190610b63565b61034c9190610b63565b6103569190610b43565b82600201546103659190610b2b565b949350505050565b6000546001600160a01b031633146103975760405162461bcd60e51b81526004016102a290610af6565b6103a160006108fc565b565b600260015414156103f65760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102a2565b600260015533600090815260076020526040902080546104585760405162461bcd60e51b815260206004820152601e60248201527f43616e746964616420696e76616c69646120706172612072657469726172000060448201526064016102a2565b610461336102da565b426001830155815460006002840181905580845560068054839290610487908490610b82565b909155505060025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156104d857600080fd5b505af11580156104ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105109190610abe565b5060035460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561055d57600080fd5b505af1158015610571573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105959190610abe565b5061059f3361094c565b50506001805550565b6000546001600160a01b031633146105d25760405162461bcd60e51b81526004016102a290610af6565b60005b6008548110156106515760006008828154811061060257634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031680835260079091526040909120909150610632826102da565b600282015542600190910155508061064981610b99565b9150506105d5565b50600455565b600260015414156106aa5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102a2565b6002600155806106fc5760405162461bcd60e51b815260206004820152601e60248201527f43616e746964616420696e76616c6964612070617261207374616b696e67000060448201526064016102a2565b336000908152600760205260409020805461075457600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b031916331790555b80541561076a57610764336102da565b60028201555b4260018201556002546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156107c257600080fd5b505af11580156107d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fa9190610abe565b508181600001600082825461080f9190610b2b565b9250508190555081600660008282546108289190610b2b565b9091555050600180555050565b6000546001600160a01b0316331461085f5760405162461bcd60e51b81526004016102a290610af6565b6001600160a01b0381166108c45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102a2565b6108cd816108fc565b50565b6000806108dc836102da565b905060006305f5e1006108f2624c4b4084610b63565b6103659190610b43565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60085460005b81811015610a8b57826001600160a01b03166008828154811061098557634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610a795760086109ad600184610b82565b815481106109cb57634e487b7160e01b600052603260045260246000fd5b600091825260209091200154600880546001600160a01b039092169183908110610a0557634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506008805480610a5257634e487b7160e01b600052603160045260246000fd5b600082815260209020810160001990810180546001600160a01b0319169055019055505050565b80610a8381610b99565b915050610952565b505050565b600060208284031215610aa1578081fd5b81356001600160a01b0381168114610ab7578182fd5b9392505050565b600060208284031215610acf578081fd5b81518015158114610ab7578182fd5b600060208284031215610aef578081fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610b3e57610b3e610bb4565b500190565b600082610b5e57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610b7d57610b7d610bb4565b500290565b600082821015610b9457610b94610bb4565b500390565b6000600019821415610bad57610bad610bb4565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220ec8636c2a891ab386ed25aceec7a6bfdebbc0602d8f506f2c9d59fd06f44be3964736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:562:9",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:9",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:9"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:9",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:9",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:9"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:9"
                  },
                  "nodeType": "YulIf",
                  "src": "115:2:9"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:9",
                "type": ""
              }
            ],
            "src": "14:177:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "311:249:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "357:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "366:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "374:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "359:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "359:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "359:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "332:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "341:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "328:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "353:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "324:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "324:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "321:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "392:50:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "432:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "402:29:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "402:40:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "392:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "451:59:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "495:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "506:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "491:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "491:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "461:29:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "461:49:9"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "451:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "519:35:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "539:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "550:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "535:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "535:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "529:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "529:25:9"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "519:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "261:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "272:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "284:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "292:6:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "300:6:9",
                "type": ""
              }
            ],
            "src": "196:364:9"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n}",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5424:9",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:9",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:236:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:9"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "273:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "281:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "223:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "234:5:9"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "249:3:9",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "254:1:9",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "245:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "245:11:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "258:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "241:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "241:19:9"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "230:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "230:31:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "220:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "220:42:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "213:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "213:50:9"
                  },
                  "nodeType": "YulIf",
                  "src": "210:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "299:15:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "309:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "299:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:9",
                "type": ""
              }
            ],
            "src": "14:306:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "403:219:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "449:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "458:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "466:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "451:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "451:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "451:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "424:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "433:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "420:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "420:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "445:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "416:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "416:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "413:2:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "484:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "503:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "497:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "497:16:9"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "488:5:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "566:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "575:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "583:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "568:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "568:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "568:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "535:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "556:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "549:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "549:13:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "542:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "542:21:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "532:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "532:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "525:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "525:40:9"
                  },
                  "nodeType": "YulIf",
                  "src": "522:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "601:15:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "611:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "601:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "369:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "380:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "392:6:9",
                "type": ""
              }
            ],
            "src": "325:297:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "697:120:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "743:26:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "752:6:9"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "760:6:9"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "745:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "745:22:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "745:22:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "718:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "727:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "714:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "714:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "739:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "710:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "710:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "707:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "778:33:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "801:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "788:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "788:23:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "778:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "663:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "674:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "686:6:9",
                "type": ""
              }
            ],
            "src": "627:190:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "923:102:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "933:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "945:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "956:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "941:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "941:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "933:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "975:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "990:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1006:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1011:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1002:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1002:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1015:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "998:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "998:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "986:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "986:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "968:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "968:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "968:51:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "892:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "903:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "914:4:9",
                "type": ""
              }
            ],
            "src": "822:203:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1187:218:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1197:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1209:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1220:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1205:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1205:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1197:4:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1232:29:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1250:3:9",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1255:1:9",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1246:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1246:11:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1259:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1242:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1242:19:9"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1236:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1277:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1292:6:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1300:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1288:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1288:15:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1270:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1270:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1270:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1324:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1335:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1320:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1320:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1344:6:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1352:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1340:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1340:15:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1313:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1313:43:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1313:43:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1376:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1387:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1372:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1372:18:9"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1392:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1365:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1365:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1365:34:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1140:9:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1151:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1159:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1167:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1178:4:9",
                "type": ""
              }
            ],
            "src": "1030:375:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1539:145:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1549:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1561:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1572:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1557:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1557:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1549:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1591:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1606:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1622:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1627:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1618:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1618:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1631:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1614:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1614:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1602:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1602:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1584:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1584:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1584:51:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1655:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1666:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1651:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1651:18:9"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1671:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1644:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1644:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1644:34:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1500:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1511:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1519:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1530:4:9",
                "type": ""
              }
            ],
            "src": "1410:274:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1809:102:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1819:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1831:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1842:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1827:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1827:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1819:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1861:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1876:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1892:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1897:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1888:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1888:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1901:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1884:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1884:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1872:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1872:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1854:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1854:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1854:51:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_RewardToken_$899__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1778:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1789:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1800:4:9",
                "type": ""
              }
            ],
            "src": "1689:222:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2038:102:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2048:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2060:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2071:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2056:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2056:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2048:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2090:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2105:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2121:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2126:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2117:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2117:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2130:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2113:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2113:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2101:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2101:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2083:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2083:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2083:51:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_StakingToken_$1376__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2007:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2018:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2029:4:9",
                "type": ""
              }
            ],
            "src": "1916:224:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2319:180:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2336:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2347:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2329:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2329:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2329:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2370:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2381:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2366:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2366:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2386:2:9",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2359:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2359:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2359:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2409:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2420:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2405:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2405:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2425:32:9",
                        "type": "",
                        "value": "Cantidad invalida para staking"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2398:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2398:60:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2398:60:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2467:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2479:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2490:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2475:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2475:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2467:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_00bc9f6bb74d69662c178147af27179a518bc71a7b6981d7218bcadff1eefac0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2296:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2310:4:9",
                "type": ""
              }
            ],
            "src": "2145:354:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2678:228:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2695:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2706:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2688:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2688:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2688:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2729:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2740:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2725:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2725:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2745:2:9",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2718:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2718:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2718:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2768:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2779:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2764:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2764:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2784:34:9",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2757:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2757:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2757:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2839:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2850:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2835:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2835:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2855:8:9",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2828:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2828:36:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2828:36:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2873:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2885:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2896:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2881:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2881:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2873:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2655:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2669:4:9",
                "type": ""
              }
            ],
            "src": "2504:402:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3085:180:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3102:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3113:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3095:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3095:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3095:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3136:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3147:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3132:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3132:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3152:2:9",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3125:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3125:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3125:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3175:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3186:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3171:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3171:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3191:32:9",
                        "type": "",
                        "value": "Cantidad invalida para retirar"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3164:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3164:60:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3164:60:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3233:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3245:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3256:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3241:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3241:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3233:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2b4b8f03711e230357457b089f4507cf65e33b30db4f33b67a62da3f48da814f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3062:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3076:4:9",
                "type": ""
              }
            ],
            "src": "2911:354:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3444:182:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3461:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3472:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3454:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3454:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3454:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3495:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3506:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3491:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3491:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3511:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3484:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3484:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3484:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3534:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3545:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3530:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3530:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3550:34:9",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3523:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3523:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3523:62:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3594:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3606:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3617:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3602:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3602:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3594:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3421:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3435:4:9",
                "type": ""
              }
            ],
            "src": "3270:356:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3805:181:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3822:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3833:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3815:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3815:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3815:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3856:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3867:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3852:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3852:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3872:2:9",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3845:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3845:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3845:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3895:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3906:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3891:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3891:18:9"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3911:33:9",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3884:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3884:61:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3884:61:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3954:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3966:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3977:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3962:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3962:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3954:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3782:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3796:4:9",
                "type": ""
              }
            ],
            "src": "3631:355:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4092:76:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4102:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4114:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4125:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4110:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4110:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4102:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4144:9:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4155:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4137:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4137:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4137:25:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4061:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4072:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4083:4:9",
                "type": ""
              }
            ],
            "src": "3991:177:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4330:162:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4340:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4352:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4363:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4348:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4348:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4340:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4382:9:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4393:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4375:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4375:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4375:25:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4420:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4431:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4416:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4416:18:9"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4436:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4409:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4409:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4409:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4463:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4474:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4459:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4459:18:9"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4479:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4452:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4452:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4452:34:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4283:9:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4294:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4302:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4310:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4321:4:9",
                "type": ""
              }
            ],
            "src": "4173:319:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4545:80:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4572:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4574:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4574:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4574:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4561:1:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4568:1:9"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "4564:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4564:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4558:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4558:13:9"
                  },
                  "nodeType": "YulIf",
                  "src": "4555:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4603:16:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4614:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4617:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4610:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4610:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "4603:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4528:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4531:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "4537:3:9",
                "type": ""
              }
            ],
            "src": "4497:128:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4676:171:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4707:111:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "4728:1:9"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4735:3:9",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4740:10:9",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "4731:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4731:20:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4721:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4721:31:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4721:31:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4772:1:9",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4775:4:9",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4765:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4765:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4765:15:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "4800:1:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4803:4:9",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4793:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4793:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4793:15:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4696:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4689:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4689:9:9"
                  },
                  "nodeType": "YulIf",
                  "src": "4686:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4827:14:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4836:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4839:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "4832:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4832:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "4827:1:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4661:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4664:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "4670:1:9",
                "type": ""
              }
            ],
            "src": "4630:217:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4904:116:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4963:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4965:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4965:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4965:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "4935:1:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4928:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4928:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4921:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4921:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4943:1:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4954:1:9",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "4950:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4950:6:9"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "4958:1:9"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "4946:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4946:14:9"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4940:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4940:21:9"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4917:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4917:45:9"
                  },
                  "nodeType": "YulIf",
                  "src": "4914:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4994:20:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5009:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5012:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "5005:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5005:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "4994:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4883:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4886:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "4892:7:9",
                "type": ""
              }
            ],
            "src": "4852:168:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5074:76:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5096:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5098:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5098:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5098:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5090:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5093:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5087:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5087:8:9"
                  },
                  "nodeType": "YulIf",
                  "src": "5084:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5127:17:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5139:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5142:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "5135:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5135:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "5127:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5056:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5059:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "5065:4:9",
                "type": ""
              }
            ],
            "src": "5025:125:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5202:88:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5233:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5235:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5235:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5235:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5218:5:9"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5229:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "5225:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5225:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "5215:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5215:17:9"
                  },
                  "nodeType": "YulIf",
                  "src": "5212:2:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5264:20:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5275:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5282:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5271:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5271:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "5264:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5184:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "5194:3:9",
                "type": ""
              }
            ],
            "src": "5155:135:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5327:95:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5344:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5351:3:9",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5356:10:9",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5347:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5347:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5337:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5337:31:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5337:31:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5384:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5387:4:9",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5377:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5377:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5377:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5408:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5411:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5401:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5401:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5401:15:9"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "5295:127:9"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_RewardToken_$899__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_StakingToken_$1376__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_00bc9f6bb74d69662c178147af27179a518bc71a7b6981d7218bcadff1eefac0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Cantidad invalida para staking\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2b4b8f03711e230357457b089f4507cf65e33b30db4f33b67a62da3f48da814f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Cantidad invalida para retirar\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "649:7357:7:-:0;;;1244:6;1215:35;;2246:193;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:5;921:18:0;:32::i;:::-;1701:1:1;1806:22;;2328:7:7;:37;;-1:-1:-1;;;;;2328:37:7;;;-1:-1:-1;;;;;;2328:37:7;;;;;;;2376:6;:34;;;;;;;;;;;;;;;2421:3;:10;649:7357;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2270:187;;:::o;14:177:9:-;93:13;;-1:-1:-1;;;;;135:31:9;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:364::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:2;;;374:6;366;359:22;321:2;402:40;432:9;402:40;:::i;:::-;392:50;;461:49;506:2;495:9;491:18;461:49;:::i;:::-;451:59;;550:2;539:9;535:18;529:25;519:35;;311:249;;;;;:::o;:::-;649:7357:7;;;;;;",
  "deployedSourceMap": "649:7357:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1215:35;;;;;;;;;4137:25:9;;;4125:2;4110:18;1215:35:7;;;;;;;;6625:110;;;;;;:::i;:::-;;:::i;:::-;;743:25;;;;;-1:-1:-1;;;;;743:25:7;;;;;;-1:-1:-1;;;;;986:32:9;;;968:51;;956:2;941:18;743:25:7;923:102:9;1915:32:7;;;;;;:::i;:::-;;:::i;709:27::-;;;;;-1:-1:-1;;;;;709:27:7;;;852:18;;;;;;5121:445;;;;;;:::i;:::-;;:::i;1668:101:0:-;;;:::i;3521:1006:7:-;;;:::i;1294:26::-;;;;;;5886:547;;;;;;:::i;:::-;;:::i;1036:85:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;1790:41:7;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4375:25:9;;;4431:2;4416:18;;4409:34;;;;4459:18;;;4452:34;4363:2;4348:18;1790:41:7;4330:162:9;2572:828:7;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;:::i;:::-;;:::i;7152:229:7:-;;;;;;:::i;:::-;;:::i;1465:48::-;;1506:7;1465:48;;6625:110;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;6701:11:7::1;:26:::0;6625:110::o;1915:32::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1915:32:7;;-1:-1:-1;1915:32:7;:::o;5121:445::-;-1:-1:-1;;;;;5226:13:7;;5182:7;5226:13;;;:7;:13;;;;;5254;;5250:72;;5296:14;;;;5121:445;-1:-1:-1;;5121:445:7:o;5250:72::-;5334:22;5377:6;:21;;;5359:15;:39;;;;:::i;:::-;5334:64;-1:-1:-1;5533:23:7;1051:8;5533:5;:23;:::i;:::-;5500:11;;5494:3;;5478:13;;5461:30;;:14;:30;:::i;:::-;:36;;;;:::i;:::-;:50;;;;:::i;:::-;5460:97;;;;:::i;:::-;5429:6;:14;;;:129;;;;:::i;:::-;5409:149;5121:445;-1:-1:-1;;;;5121:445:7:o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;3521:1006:7:-;1744:1:1;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:1;;3833:2:9;2317:63:1;;;3815:21:9;3872:2;3852:18;;;3845:30;3911:33;3891:18;;;3884:61;3962:18;;2317:63:1;3805:181:9;2317:63:1;1744:1;2455:7;:18;3605:10:7::1;3573:21;3597:19:::0;;;:7:::1;:19;::::0;;;;3635:13;;3627:60:::1;;;::::0;-1:-1:-1;;;3627:60:7;;3113:2:9;3627:60:7::1;::::0;::::1;3095:21:9::0;3152:2;3132:18;;;3125:30;3191:32;3171:18;;;3164:60;3241:18;;3627:60:7::1;3085:180:9::0;3627:60:7::1;3865:28;3882:10;3865:16;:28::i;:::-;3928:15;3904:21;::::0;::::1;:39:::0;4034:13;;-1:-1:-1;3848:14:7::1;::::0;::::1;4109:18:::0;;;4138:17;;;4166:11:::1;:29:::0;;4034:13;;-1:-1:-1;4166:29:7::1;::::0;4034:13;;4166:29:::1;:::i;:::-;::::0;;;-1:-1:-1;;4284:7:7::1;::::0;:44:::1;::::0;-1:-1:-1;;;4284:44:7;;4301:10:::1;4284:44;::::0;::::1;1584:51:9::0;1651:18;;;1644:34;;;-1:-1:-1;;;;;4284:7:7;;::::1;::::0;:16:::1;::::0;1557:18:9;;4284:44:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4339:6:7::1;::::0;:46:::1;::::0;-1:-1:-1;;;4339:46:7;;4355:10:::1;4339:46;::::0;::::1;1584:51:9::0;1651:18;;;1644:34;;;-1:-1:-1;;;;;4339:6:7;;::::1;::::0;:15:::1;::::0;1557:18:9;;4339:46:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4495:24;4508:10;4495:12;:24::i;:::-;-1:-1:-1::0;;1701:1:1;2628:22;;-1:-1:-1;3521:1006:7:o;5886:547::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5951:9:7::1;5946:459;5970:15;:22:::0;5966:26;::::1;5946:459;;;6014:18;6035:15;6051:1;6035:18;;;;;;-1:-1:-1::0;;;6035:18:7::1;;;;;;;;;;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;6035:18:7::1;6092:19:::0;;;:7:::1;:19:::0;;;;;;;6035:18;;-1:-1:-1;6213:28:7::1;6035:18:::0;6213:16:::1;:28::i;:::-;6196:14;::::0;::::1;:45:::0;6378:15:::1;6354:21;::::0;;::::1;:39:::0;-1:-1:-1;5994:3:7;::::1;::::0;::::1;:::i;:::-;;;;5946:459;;;-1:-1:-1::0;6415:3:7::1;:10:::0;5886:547::o;2572:828::-;1744:1:1;2325:7;;:19;;2317:63;;;;-1:-1:-1;;;2317:63:1;;3833:2:9;2317:63:1;;;3815:21:9;3872:2;3852:18;;;3845:30;3911:33;3891:18;;;3884:61;3962:18;;2317:63:1;3805:181:9;2317:63:1;1744:1;2455:7;:18;2644:10:7;2636:53:::1;;;::::0;-1:-1:-1;;;2636:53:7;;2347:2:9;2636:53:7::1;::::0;::::1;2329:21:9::0;2386:2;2366:18;;;2359:30;2425:32;2405:18;;;2398:60;2475:18;;2636:53:7::1;2319:180:9::0;2636:53:7::1;2734:10;2702:21;2726:19:::0;;;:7:::1;:19;::::0;;;;2845:13;;2841:83:::1;;2880:15;:32:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;2880:32:7;;;;;::::1;::::0;;-1:-1:-1;;;;;;2880:32:7::1;2901:10;2880:32;::::0;;2841:83:::1;3012:13:::0;;:17;3008:95:::1;;3063:28;3080:10;3063:16;:28::i;:::-;3046:14;::::0;::::1;:45:::0;3008:95:::1;3186:15;3162:21;::::0;::::1;:39:::0;3271:7:::1;::::0;:55:::1;::::0;-1:-1:-1;;;3271:55:7;;3292:10:::1;3271:55;::::0;::::1;1270:34:9::0;3312:4:7::1;1320:18:9::0;;;1313:43;1372:18;;;1365:34;;;-1:-1:-1;;;;;3271:7:7;;::::1;::::0;:20:::1;::::0;1205:18:9;;3271:55:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3354:6;3337;:13;;;:23;;;;;;;:::i;:::-;;;;;;;;3386:6;3371:11;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;1701:1:1;2628:22;;-1:-1:-1;;2572:828:7:o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;2706:2:9;1998:73:0::1;::::0;::::1;2688:21:9::0;2745:2;2725:18;;;2718:30;2784:34;2764:18;;;2757:62;-1:-1:-1;;;2835:18:9;;;2828:36;2881:19;;1998:73:0::1;2678:228:9::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;7152:229:7:-;7217:7;7237:15;7255:22;7272:4;7255:16;:22::i;:::-;7237:40;-1:-1:-1;7288:17:7;7338:7;7309:24;1506:7;7237:40;7309:24;:::i;:::-;7308:38;;;;:::i;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2270:187;;:::o;7636:367:7:-;7715:15;:22;7698:14;7748:248;7772:6;7768:1;:10;7748:248;;;7826:10;-1:-1:-1;;;;;7804:32:7;:15;7820:1;7804:18;;;;;;-1:-1:-1;;;7804:18:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7804:18:7;:32;7800:185;;;7878:15;7894:10;7903:1;7894:6;:10;:::i;:::-;7878:27;;;;;;-1:-1:-1;;;7878:27:7;;;;;;;;;;;;;;;;;;;7857:15;:18;;-1:-1:-1;;;;;7878:27:7;;;;7873:1;;7857:18;;;;-1:-1:-1;;;7857:18:7;;;;;;;;;;;;;;;;;:48;;;;;-1:-1:-1;;;;;7857:48:7;;;;;-1:-1:-1;;;;;7857:48:7;;;;;;7924:15;:21;;;;;-1:-1:-1;;;7924:21:7;;;;;;;;;;;;;;;;;;-1:-1:-1;;7924:21:7;;;;;-1:-1:-1;;;;;;7924:21:7;;;;;;7748:248;7636:367;;:::o;7800:185::-;7780:3;;;;:::i;:::-;;;;7748:248;;;;7636:367;;:::o;14:306:9:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:9;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:9:o;325:297::-;392:6;445:2;433:9;424:7;420:23;416:32;413:2;;;466:6;458;451:22;413:2;503:9;497:16;556:5;549:13;542:21;535:5;532:32;522:2;;583:6;575;568:22;627:190;686:6;739:2;727:9;718:7;714:23;710:32;707:2;;;760:6;752;745:22;707:2;-1:-1:-1;788:23:9;;697:120;-1:-1:-1;697:120:9:o;3270:356::-;3472:2;3454:21;;;3491:18;;;3484:30;3550:34;3545:2;3530:18;;3523:62;3617:2;3602:18;;3444:182::o;4497:128::-;4537:3;4568:1;4564:6;4561:1;4558:13;4555:2;;;4574:18;;:::i;:::-;-1:-1:-1;4610:9:9;;4545:80::o;4630:217::-;4670:1;4696;4686:2;;-1:-1:-1;;;4721:31:9;;4775:4;4772:1;4765:15;4803:4;4728:1;4793:15;4686:2;-1:-1:-1;4832:9:9;;4676:171::o;4852:168::-;4892:7;4958:1;4954;4950:6;4946:14;4943:1;4940:21;4935:1;4928:9;4921:17;4917:45;4914:2;;;4965:18;;:::i;:::-;-1:-1:-1;5005:9:9;;4904:116::o;5025:125::-;5065:4;5093:1;5090;5087:8;5084:2;;;5098:18;;:::i;:::-;-1:-1:-1;5135:9:9;;5074:76::o;5155:135::-;5194:3;-1:-1:-1;;5215:17:9;;5212:2;;;5235:18;;:::i;:::-;-1:-1:-1;5282:1:9;5271:13;;5202:88::o;5295:127::-;5356:10;5351:3;5347:20;5344:1;5337:31;5387:4;5384:1;5377:15;5411:4;5408:1;5401:15",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"./StakingToken.sol\";\r\nimport \"./RewardToken.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\n// Propietario: 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4\r\n// Alice: 0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2\r\n// Bob: 0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db\r\n\r\n/**\r\n * @title StakingPlatform\r\n * @dev Contrato para hacer staking de tokens y generar recompensas según un APR configurable.\r\n *      Además, se agrega un factor de aceleración (accelerator) para simular recompensas más rápidas.\r\n */\r\ncontract StakingPlatform is Ownable, ReentrancyGuard {\r\n    StakingToken public staking;\r\n    RewardToken public reward;\r\n\r\n    // APR en basis points. Por ejemplo, 1250 equivale a un 12.50% anual.\r\n    uint256 public apr;\r\n\r\n    // Número de segundos en un año (365 días).\r\n    // 365 días * 24 horas/día * 60 min/hora * 60 seg/min = 31536000 seg.\r\n    uint256 private constant SECONDS_IN_YEAR = 31536000;\r\n\r\n    // Factor de aceleración para simular recompensas más rápidas.\r\n    // 1 significa sin aceleración; 2 significa el doble de rápido, etc.\r\n    uint256 public accelerator = 100000;\r\n\r\n    // Total de tokens apostados.\r\n    uint256 public totalStaked;\r\n\r\n    // Valor ficticio para RWD en USDT (para pruebas).\r\n    // Queremos que 1 RWD valga $0.05. Con 8 decimales: 0.05 * 10^8 = 5000000.\r\n    uint256 public constant FAKE_RWD_PRICE = 5000000;\r\n\r\n    struct Staker {\r\n        uint256 amount; // Tokens apostados por el usuario.\r\n        uint256 lastUpdateTime; // Última vez que el usuario interactuó con el contrato.\r\n        uint256 rewards; // Recompensas acumuladas hasta la última actualización.\r\n    }\r\n\r\n    mapping(address => Staker) public stakers;\r\n\r\n    // Array para almacenar las direcciones de todos los stakers activos.\r\n    address[] public stakerAddresses;\r\n\r\n    /**\r\n     * @dev Constructor que inicializa el contrato.\r\n     * @param _stakingToken Dirección del contrato StakingToken.\r\n     * @param _rewardToken Dirección del contrato RewardToken.\r\n     * @param _apr APR inicial en basis points (por ejemplo, 1250 para 12.50% anual).\r\n     */\r\n    constructor(address _stakingToken, address _rewardToken, uint256 _apr) {\r\n        staking = StakingToken(_stakingToken);\r\n        reward = RewardToken(_rewardToken);\r\n        apr = _apr;\r\n    }\r\n\r\n    /**\r\n     * @notice Permite a los usuarios apostar tokens.\r\n     * @param amount Cantidad de tokens a apostar.\r\n     */\r\n    function stake(uint256 amount) external nonReentrant {\r\n        require(amount > 0, \"Cantidad invalida para staking\");\r\n\r\n        Staker storage staker = stakers[msg.sender];\r\n\r\n        // Si es el primer staking del usuario, lo agregamos al array de stakers.\r\n        if (staker.amount == 0) {\r\n            stakerAddresses.push(msg.sender);\r\n        }\r\n\r\n        // Si ya tiene tokens apostados, actualizamos sus recompensas.\r\n        if (staker.amount > 0) {\r\n            staker.rewards = calculateRewards(msg.sender);\r\n        }\r\n\r\n        // Actualizamos el último timestamp.\r\n        staker.lastUpdateTime = block.timestamp;\r\n\r\n        // Transferimos tokens del usuario al contrato.\r\n        staking.transferFrom(msg.sender, address(this), amount);\r\n        staker.amount += amount;\r\n        totalStaked += amount;\r\n    }\r\n\r\n    /**\r\n     * @notice Permite a los usuarios retirar sus tokens apostados junto con las recompensas.\r\n     */\r\n    function unStake() external nonReentrant {\r\n        Staker storage staker = stakers[msg.sender];\r\n        require(staker.amount > 0, \"Cantidad invalida para retirar\");\r\n\r\n        // Actualizamos las recompensas acumuladas antes de retirar.\r\n        // Usamos \"=\" en lugar de \"+=\" para evitar duplicar lo ya acumulado.\r\n        staker.rewards = calculateRewards(msg.sender);\r\n        staker.lastUpdateTime = block.timestamp;\r\n\r\n        uint256 rewardsToTransfer = staker.rewards;\r\n        uint256 amountToReturn = staker.amount;\r\n\r\n        // Reiniciamos los valores del usuario.\r\n        staker.rewards = 0;\r\n        staker.amount = 0;\r\n        totalStaked -= amountToReturn;\r\n\r\n        // Transferimos los tokens apostados y las recompensas acumuladas.\r\n        staking.transfer(msg.sender, amountToReturn);\r\n        reward.transfer(msg.sender, rewardsToTransfer);\r\n\r\n        // Removemos la dirección del staker del array, ya que ya no está realizando staking.\r\n        removeStaker(msg.sender);\r\n    }\r\n\r\n    /**\r\n     * @notice Calcula las recompensas acumuladas para un usuario usando APR y un factor de aceleración.\r\n     * @param user Dirección del usuario.\r\n     * @return La cantidad total de recompensas acumuladas.\r\n     *\r\n     * Fórmula base:\r\n     *   rewards = recompensas previas +\r\n     *     (timeDifference * staker.amount * apr * accelerator) / (10000 * SECONDS_IN_YEAR)\r\n     *\r\n     * Donde:\r\n     *   - apr/10000 es el APR anual en forma fraccionaria (por ejemplo, 1250 -> 0.125).\r\n     *   - accelerator = 1 => sin aceleración, 2 => doble de rápido, etc.\r\n     */\r\n    function calculateRewards(address user) public view returns (uint256) {\r\n        Staker storage staker = stakers[user];\r\n        if (staker.amount == 0) {\r\n            return staker.rewards;\r\n        }\r\n\r\n        uint256 timeDifference = block.timestamp - staker.lastUpdateTime;\r\n        return\r\n            staker.rewards +\r\n            ((timeDifference * staker.amount * apr * accelerator) /\r\n                (10000 * SECONDS_IN_YEAR));\r\n    }\r\n\r\n    /**\r\n     * @notice Permite al owner actualizar el APR.\r\n     * Antes de asignar el nuevo APR, liquida las recompensas acumuladas de todos los stakers\r\n     * usando el APR anterior y actualiza su lastUpdateTime.\r\n     * @param _apr Nuevo APR en basis points (por ejemplo, 3500 para 35.00% anual).\r\n     */\r\n    function setAPR(uint256 _apr) external onlyOwner {\r\n        for (uint256 i = 0; i < stakerAddresses.length; i++) {\r\n            address stakerAddr = stakerAddresses[i];\r\n            Staker storage staker = stakers[stakerAddr];\r\n            // Liquidamos las recompensas utilizando el APR vigente.\r\n            staker.rewards = calculateRewards(stakerAddr);\r\n            // Reiniciamos el tiempo para que la nueva acumulación se realice con el nuevo APR.\r\n            staker.lastUpdateTime = block.timestamp;\r\n        }\r\n        apr = _apr;\r\n    }\r\n\r\n    /**\r\n     * @notice Permite al owner actualizar el factor de aceleración (accelerator).\r\n     * @param _accelerator Nuevo factor de aceleración (1 = sin aceleración).\r\n     */\r\n    function setAccelerator(uint256 _accelerator) external onlyOwner {\r\n        accelerator = _accelerator;\r\n    }\r\n\r\n    /**\r\n     * @notice Obtiene el valor en USDT de las recompensas acumuladas para un usuario.\r\n     * @param user Dirección del usuario.\r\n     * @return El valor de las recompensas en USDT.\r\n     *\r\n     * Para pruebas, se utiliza un valor ficticio (FAKE_RWD_PRICE) que define el precio de RWD en USDT.\r\n     * En este caso, FAKE_RWD_PRICE = 5000000, lo que significa que 1 RWD equivale a $0.05.\r\n     */\r\n    function getRewardValueInUSDT(address user) public view returns (uint256) {\r\n        uint256 rewards = calculateRewards(user);\r\n        uint256 usdtValue = (rewards * FAKE_RWD_PRICE) / (10 ** 8);\r\n        return usdtValue;\r\n    }\r\n\r\n    /**\r\n     * @dev Función interna para remover una dirección del array stakerAddresses.\r\n     * Se utiliza cuando un usuario realiza unstake y ya no tiene tokens apostados.\r\n     * @param stakerAddr Dirección del staker a remover.\r\n     */\r\n    function removeStaker(address stakerAddr) internal {\r\n        uint256 length = stakerAddresses.length;\r\n        for (uint256 i = 0; i < length; i++) {\r\n            if (stakerAddresses[i] == stakerAddr) {\r\n                stakerAddresses[i] = stakerAddresses[length - 1];\r\n                stakerAddresses.pop();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\Blockchain\\Projects\\Solidity\\staking-ui\\src\\contracts\\StakingPlatform.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/StakingPlatform.sol",
    "exportedSymbols": {
      "Context": [
        857
      ],
      "ERC20": [
        732
      ],
      "IERC20": [
        810
      ],
      "IERC20Metadata": [
        835
      ],
      "Ownable": [
        104
      ],
      "ReentrancyGuard": [
        144
      ],
      "RewardToken": [
        899
      ],
      "StakingPlatform": [
        1334
      ],
      "StakingToken": [
        1376
      ]
    },
    "id": 1335,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 901,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:7"
      },
      {
        "absolutePath": "project:/src/contracts/StakingToken.sol",
        "file": "./StakingToken.sol",
        "id": 902,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1335,
        "sourceUnit": 1377,
        "src": "60:28:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/contracts/RewardToken.sol",
        "file": "./RewardToken.sol",
        "id": 903,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1335,
        "sourceUnit": 900,
        "src": "90:27:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 904,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1335,
        "sourceUnit": 105,
        "src": "119:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 905,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1335,
        "sourceUnit": 145,
        "src": "173:62:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 907,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "677:7:7"
            },
            "id": 908,
            "nodeType": "InheritanceSpecifier",
            "src": "677:7:7"
          },
          {
            "baseName": {
              "id": 909,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 144,
              "src": "686:15:7"
            },
            "id": 910,
            "nodeType": "InheritanceSpecifier",
            "src": "686:15:7"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 906,
          "nodeType": "StructuredDocumentation",
          "src": "407:240:7",
          "text": " @title StakingPlatform\n @dev Contrato para hacer staking de tokens y generar recompensas según un APR configurable.\n      Además, se agrega un factor de aceleración (accelerator) para simular recompensas más rápidas."
        },
        "fullyImplemented": true,
        "id": 1334,
        "linearizedBaseContracts": [
          1334,
          144,
          104,
          857
        ],
        "name": "StakingPlatform",
        "nameLocation": "658:15:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "4cf088d9",
            "id": 913,
            "mutability": "mutable",
            "name": "staking",
            "nameLocation": "729:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 1334,
            "src": "709:27:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingToken_$1376",
              "typeString": "contract StakingToken"
            },
            "typeName": {
              "id": 912,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 911,
                "name": "StakingToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1376,
                "src": "709:12:7"
              },
              "referencedDeclaration": 1376,
              "src": "709:12:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingToken_$1376",
                "typeString": "contract StakingToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "228cb733",
            "id": 916,
            "mutability": "mutable",
            "name": "reward",
            "nameLocation": "762:6:7",
            "nodeType": "VariableDeclaration",
            "scope": 1334,
            "src": "743:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RewardToken_$899",
              "typeString": "contract RewardToken"
            },
            "typeName": {
              "id": 915,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 914,
                "name": "RewardToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 899,
                "src": "743:11:7"
              },
              "referencedDeclaration": 899,
              "src": "743:11:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RewardToken_$899",
                "typeString": "contract RewardToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "57ded9c9",
            "id": 918,
            "mutability": "mutable",
            "name": "apr",
            "nameLocation": "867:3:7",
            "nodeType": "VariableDeclaration",
            "scope": 1334,
            "src": "852:18:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 917,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "852:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 921,
            "mutability": "constant",
            "name": "SECONDS_IN_YEAR",
            "nameLocation": "1033:15:7",
            "nodeType": "VariableDeclaration",
            "scope": 1334,
            "src": "1008:51:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 919,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1008:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3331353336303030",
              "id": 920,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1051:8:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_31536000_by_1",
                "typeString": "int_const 31536000"
              },
              "value": "31536000"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "1c05ca8d",
            "id": 924,
            "mutability": "mutable",
            "name": "accelerator",
            "nameLocation": "1230:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 1334,
            "src": "1215:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 922,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1215:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030303030",
              "id": 923,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1244:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000_by_1",
                "typeString": "int_const 100000"
              },
              "value": "100000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "817b1cd2",
            "id": 926,
            "mutability": "mutable",
            "name": "totalStaked",
            "nameLocation": "1309:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 1334,
            "src": "1294:26:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 925,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1294:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "fd75c136",
            "id": 929,
            "mutability": "constant",
            "name": "FAKE_RWD_PRICE",
            "nameLocation": "1489:14:7",
            "nodeType": "VariableDeclaration",
            "scope": 1334,
            "src": "1465:48:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 927,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1465:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35303030303030",
              "id": 928,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1506:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5000000_by_1",
                "typeString": "int_const 5000000"
              },
              "value": "5000000"
            },
            "visibility": "public"
          },
          {
            "canonicalName": "StakingPlatform.Staker",
            "id": 936,
            "members": [
              {
                "constant": false,
                "id": 931,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "1555:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 936,
                "src": "1547:14:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 930,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1547:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 933,
                "mutability": "mutable",
                "name": "lastUpdateTime",
                "nameLocation": "1616:14:7",
                "nodeType": "VariableDeclaration",
                "scope": 936,
                "src": "1608:22:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 932,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1608:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 935,
                "mutability": "mutable",
                "name": "rewards",
                "nameLocation": "1708:7:7",
                "nodeType": "VariableDeclaration",
                "scope": 936,
                "src": "1700:15:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 934,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1700:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Staker",
            "nameLocation": "1529:6:7",
            "nodeType": "StructDefinition",
            "scope": 1334,
            "src": "1522:260:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9168ae72",
            "id": 941,
            "mutability": "mutable",
            "name": "stakers",
            "nameLocation": "1824:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 1334,
            "src": "1790:41:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$936_storage_$",
              "typeString": "mapping(address => struct StakingPlatform.Staker)"
            },
            "typeName": {
              "id": 940,
              "keyType": {
                "id": 937,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1798:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1790:26:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$936_storage_$",
                "typeString": "mapping(address => struct StakingPlatform.Staker)"
              },
              "valueType": {
                "id": 939,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 938,
                  "name": "Staker",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 936,
                  "src": "1809:6:7"
                },
                "referencedDeclaration": 936,
                "src": "1809:6:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                  "typeString": "struct StakingPlatform.Staker"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "459598a2",
            "id": 944,
            "mutability": "mutable",
            "name": "stakerAddresses",
            "nameLocation": "1932:15:7",
            "nodeType": "VariableDeclaration",
            "scope": 1334,
            "src": "1915:32:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 942,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1915:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 943,
              "nodeType": "ArrayTypeName",
              "src": "1915:9:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 970,
              "nodeType": "Block",
              "src": "2317:122:7",
              "statements": [
                {
                  "expression": {
                    "id": 958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 954,
                      "name": "staking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 913,
                      "src": "2328:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingToken_$1376",
                        "typeString": "contract StakingToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 956,
                          "name": "_stakingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 947,
                          "src": "2351:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 955,
                        "name": "StakingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1376,
                        "src": "2338:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingToken_$1376_$",
                          "typeString": "type(contract StakingToken)"
                        }
                      },
                      "id": 957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2338:27:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingToken_$1376",
                        "typeString": "contract StakingToken"
                      }
                    },
                    "src": "2328:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingToken_$1376",
                      "typeString": "contract StakingToken"
                    }
                  },
                  "id": 959,
                  "nodeType": "ExpressionStatement",
                  "src": "2328:37:7"
                },
                {
                  "expression": {
                    "id": 964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 960,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 916,
                      "src": "2376:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RewardToken_$899",
                        "typeString": "contract RewardToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 962,
                          "name": "_rewardToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 949,
                          "src": "2397:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 961,
                        "name": "RewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 899,
                        "src": "2385:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_RewardToken_$899_$",
                          "typeString": "type(contract RewardToken)"
                        }
                      },
                      "id": 963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2385:25:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RewardToken_$899",
                        "typeString": "contract RewardToken"
                      }
                    },
                    "src": "2376:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RewardToken_$899",
                      "typeString": "contract RewardToken"
                    }
                  },
                  "id": 965,
                  "nodeType": "ExpressionStatement",
                  "src": "2376:34:7"
                },
                {
                  "expression": {
                    "id": 968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 966,
                      "name": "apr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 918,
                      "src": "2421:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 967,
                      "name": "_apr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 951,
                      "src": "2427:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2421:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 969,
                  "nodeType": "ExpressionStatement",
                  "src": "2421:10:7"
                }
              ]
            },
            "documentation": {
              "id": 945,
              "nodeType": "StructuredDocumentation",
              "src": "1956:284:7",
              "text": " @dev Constructor que inicializa el contrato.\n @param _stakingToken Dirección del contrato StakingToken.\n @param _rewardToken Dirección del contrato RewardToken.\n @param _apr APR inicial en basis points (por ejemplo, 1250 para 12.50% anual)."
            },
            "id": 971,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 947,
                  "mutability": "mutable",
                  "name": "_stakingToken",
                  "nameLocation": "2266:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 971,
                  "src": "2258:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2258:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 949,
                  "mutability": "mutable",
                  "name": "_rewardToken",
                  "nameLocation": "2289:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 971,
                  "src": "2281:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 948,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2281:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 951,
                  "mutability": "mutable",
                  "name": "_apr",
                  "nameLocation": "2311:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 971,
                  "src": "2303:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 950,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2303:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2257:59:7"
            },
            "returnParameters": {
              "id": 953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2317:0:7"
            },
            "scope": 1334,
            "src": "2246:193:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1051,
              "nodeType": "Block",
              "src": "2625:775:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 980,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 974,
                          "src": "2644:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2653:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2644:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e746964616420696e76616c6964612070617261207374616b696e67",
                        "id": 983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2656:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00bc9f6bb74d69662c178147af27179a518bc71a7b6981d7218bcadff1eefac0",
                          "typeString": "literal_string \"Cantidad invalida para staking\""
                        },
                        "value": "Cantidad invalida para staking"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_00bc9f6bb74d69662c178147af27179a518bc71a7b6981d7218bcadff1eefac0",
                          "typeString": "literal_string \"Cantidad invalida para staking\""
                        }
                      ],
                      "id": 979,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2636:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2636:53:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 985,
                  "nodeType": "ExpressionStatement",
                  "src": "2636:53:7"
                },
                {
                  "assignments": [
                    988
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 988,
                      "mutability": "mutable",
                      "name": "staker",
                      "nameLocation": "2717:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1051,
                      "src": "2702:21:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                        "typeString": "struct StakingPlatform.Staker"
                      },
                      "typeName": {
                        "id": 987,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 986,
                          "name": "Staker",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 936,
                          "src": "2702:6:7"
                        },
                        "referencedDeclaration": 936,
                        "src": "2702:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                          "typeString": "struct StakingPlatform.Staker"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 993,
                  "initialValue": {
                    "baseExpression": {
                      "id": 989,
                      "name": "stakers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 941,
                      "src": "2726:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$936_storage_$",
                        "typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
                      }
                    },
                    "id": 992,
                    "indexExpression": {
                      "expression": {
                        "id": 990,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2734:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2734:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2726:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Staker_$936_storage",
                      "typeString": "struct StakingPlatform.Staker storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2702:43:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 994,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 988,
                        "src": "2845:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                          "typeString": "struct StakingPlatform.Staker storage pointer"
                        }
                      },
                      "id": 995,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 931,
                      "src": "2845:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2862:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2845:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1006,
                  "nodeType": "IfStatement",
                  "src": "2841:83:7",
                  "trueBody": {
                    "id": 1005,
                    "nodeType": "Block",
                    "src": "2865:59:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1001,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2901:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2901:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 998,
                              "name": "stakerAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 944,
                              "src": "2880:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2880:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 1003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2880:32:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1004,
                        "nodeType": "ExpressionStatement",
                        "src": "2880:32:7"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1007,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 988,
                        "src": "3012:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                          "typeString": "struct StakingPlatform.Staker storage pointer"
                        }
                      },
                      "id": 1008,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 931,
                      "src": "3012:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3028:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3012:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1021,
                  "nodeType": "IfStatement",
                  "src": "3008:95:7",
                  "trueBody": {
                    "id": 1020,
                    "nodeType": "Block",
                    "src": "3031:72:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1011,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 988,
                              "src": "3046:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                                "typeString": "struct StakingPlatform.Staker storage pointer"
                              }
                            },
                            "id": 1013,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rewards",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 935,
                            "src": "3046:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1015,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3080:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1016,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3080:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1014,
                              "name": "calculateRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1190,
                              "src": "3063:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 1017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3063:28:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3046:45:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1019,
                        "nodeType": "ExpressionStatement",
                        "src": "3046:45:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1022,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 988,
                        "src": "3162:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                          "typeString": "struct StakingPlatform.Staker storage pointer"
                        }
                      },
                      "id": 1024,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastUpdateTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 933,
                      "src": "3162:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1025,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "3186:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3186:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3162:39:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1028,
                  "nodeType": "ExpressionStatement",
                  "src": "3162:39:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1032,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3292:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3292:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1036,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3312:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPlatform_$1334",
                              "typeString": "contract StakingPlatform"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPlatform_$1334",
                              "typeString": "contract StakingPlatform"
                            }
                          ],
                          "id": 1035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3304:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1034,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3304:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3304:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1038,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 974,
                        "src": "3319:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1029,
                        "name": "staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 913,
                        "src": "3271:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingToken_$1376",
                          "typeString": "contract StakingToken"
                        }
                      },
                      "id": 1031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 344,
                      "src": "3271:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3271:55:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1040,
                  "nodeType": "ExpressionStatement",
                  "src": "3271:55:7"
                },
                {
                  "expression": {
                    "id": 1045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1041,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 988,
                        "src": "3337:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                          "typeString": "struct StakingPlatform.Staker storage pointer"
                        }
                      },
                      "id": 1043,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 931,
                      "src": "3337:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1044,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 974,
                      "src": "3354:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3337:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1046,
                  "nodeType": "ExpressionStatement",
                  "src": "3337:23:7"
                },
                {
                  "expression": {
                    "id": 1049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1047,
                      "name": "totalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 926,
                      "src": "3371:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1048,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 974,
                      "src": "3386:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3371:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1050,
                  "nodeType": "ExpressionStatement",
                  "src": "3371:21:7"
                }
              ]
            },
            "documentation": {
              "id": 972,
              "nodeType": "StructuredDocumentation",
              "src": "2447:119:7",
              "text": " @notice Permite a los usuarios apostar tokens.\n @param amount Cantidad de tokens a apostar."
            },
            "functionSelector": "a694fc3a",
            "id": 1052,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 977,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 976,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 143,
                  "src": "2612:12:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2612:12:7"
              }
            ],
            "name": "stake",
            "nameLocation": "2581:5:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 974,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2595:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1052,
                  "src": "2587:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 973,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2587:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2586:16:7"
            },
            "returnParameters": {
              "id": 978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2625:0:7"
            },
            "scope": 1334,
            "src": "2572:828:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1137,
              "nodeType": "Block",
              "src": "3562:965:7",
              "statements": [
                {
                  "assignments": [
                    1060
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1060,
                      "mutability": "mutable",
                      "name": "staker",
                      "nameLocation": "3588:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1137,
                      "src": "3573:21:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                        "typeString": "struct StakingPlatform.Staker"
                      },
                      "typeName": {
                        "id": 1059,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1058,
                          "name": "Staker",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 936,
                          "src": "3573:6:7"
                        },
                        "referencedDeclaration": 936,
                        "src": "3573:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                          "typeString": "struct StakingPlatform.Staker"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1065,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1061,
                      "name": "stakers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 941,
                      "src": "3597:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$936_storage_$",
                        "typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
                      }
                    },
                    "id": 1064,
                    "indexExpression": {
                      "expression": {
                        "id": 1062,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3605:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3605:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3597:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Staker_$936_storage",
                      "typeString": "struct StakingPlatform.Staker storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3573:43:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1067,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1060,
                            "src": "3635:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                              "typeString": "struct StakingPlatform.Staker storage pointer"
                            }
                          },
                          "id": 1068,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 931,
                          "src": "3635:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3651:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3635:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e746964616420696e76616c69646120706172612072657469726172",
                        "id": 1071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3654:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2b4b8f03711e230357457b089f4507cf65e33b30db4f33b67a62da3f48da814f",
                          "typeString": "literal_string \"Cantidad invalida para retirar\""
                        },
                        "value": "Cantidad invalida para retirar"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2b4b8f03711e230357457b089f4507cf65e33b30db4f33b67a62da3f48da814f",
                          "typeString": "literal_string \"Cantidad invalida para retirar\""
                        }
                      ],
                      "id": 1066,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3627:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3627:60:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1073,
                  "nodeType": "ExpressionStatement",
                  "src": "3627:60:7"
                },
                {
                  "expression": {
                    "id": 1081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1074,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1060,
                        "src": "3848:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                          "typeString": "struct StakingPlatform.Staker storage pointer"
                        }
                      },
                      "id": 1076,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 935,
                      "src": "3848:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1078,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3882:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3882:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1077,
                        "name": "calculateRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1190,
                        "src": "3865:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 1080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3865:28:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3848:45:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1082,
                  "nodeType": "ExpressionStatement",
                  "src": "3848:45:7"
                },
                {
                  "expression": {
                    "id": 1088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1083,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1060,
                        "src": "3904:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                          "typeString": "struct StakingPlatform.Staker storage pointer"
                        }
                      },
                      "id": 1085,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastUpdateTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 933,
                      "src": "3904:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1086,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "3928:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3928:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3904:39:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1089,
                  "nodeType": "ExpressionStatement",
                  "src": "3904:39:7"
                },
                {
                  "assignments": [
                    1091
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1091,
                      "mutability": "mutable",
                      "name": "rewardsToTransfer",
                      "nameLocation": "3964:17:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1137,
                      "src": "3956:25:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1090,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3956:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1094,
                  "initialValue": {
                    "expression": {
                      "id": 1092,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1060,
                      "src": "3984:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                        "typeString": "struct StakingPlatform.Staker storage pointer"
                      }
                    },
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "rewards",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 935,
                    "src": "3984:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3956:42:7"
                },
                {
                  "assignments": [
                    1096
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1096,
                      "mutability": "mutable",
                      "name": "amountToReturn",
                      "nameLocation": "4017:14:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1137,
                      "src": "4009:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1095,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4009:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1099,
                  "initialValue": {
                    "expression": {
                      "id": 1097,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1060,
                      "src": "4034:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                        "typeString": "struct StakingPlatform.Staker storage pointer"
                      }
                    },
                    "id": 1098,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "amount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 931,
                    "src": "4034:13:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4009:38:7"
                },
                {
                  "expression": {
                    "id": 1104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1100,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1060,
                        "src": "4109:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                          "typeString": "struct StakingPlatform.Staker storage pointer"
                        }
                      },
                      "id": 1102,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 935,
                      "src": "4109:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4126:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4109:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1105,
                  "nodeType": "ExpressionStatement",
                  "src": "4109:18:7"
                },
                {
                  "expression": {
                    "id": 1110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1106,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1060,
                        "src": "4138:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                          "typeString": "struct StakingPlatform.Staker storage pointer"
                        }
                      },
                      "id": 1108,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 931,
                      "src": "4138:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4154:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4138:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1111,
                  "nodeType": "ExpressionStatement",
                  "src": "4138:17:7"
                },
                {
                  "expression": {
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1112,
                      "name": "totalStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 926,
                      "src": "4166:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1113,
                      "name": "amountToReturn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1096,
                      "src": "4181:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4166:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1115,
                  "nodeType": "ExpressionStatement",
                  "src": "4166:29:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1119,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4301:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4301:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1121,
                        "name": "amountToReturn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1096,
                        "src": "4313:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1116,
                        "name": "staking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 913,
                        "src": "4284:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingToken_$1376",
                          "typeString": "contract StakingToken"
                        }
                      },
                      "id": 1118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 268,
                      "src": "4284:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4284:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1123,
                  "nodeType": "ExpressionStatement",
                  "src": "4284:44:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1127,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4355:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4355:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1129,
                        "name": "rewardsToTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1091,
                        "src": "4367:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1124,
                        "name": "reward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 916,
                        "src": "4339:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RewardToken_$899",
                          "typeString": "contract RewardToken"
                        }
                      },
                      "id": 1126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 268,
                      "src": "4339:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4339:46:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1131,
                  "nodeType": "ExpressionStatement",
                  "src": "4339:46:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1133,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4508:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4508:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1132,
                      "name": "removeStaker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1333,
                      "src": "4495:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4495:24:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1136,
                  "nodeType": "ExpressionStatement",
                  "src": "4495:24:7"
                }
              ]
            },
            "documentation": {
              "id": 1053,
              "nodeType": "StructuredDocumentation",
              "src": "3408:107:7",
              "text": " @notice Permite a los usuarios retirar sus tokens apostados junto con las recompensas."
            },
            "functionSelector": "73cf575a",
            "id": 1138,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1056,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1055,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 143,
                  "src": "3549:12:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3549:12:7"
              }
            ],
            "name": "unStake",
            "nameLocation": "3530:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3537:2:7"
            },
            "returnParameters": {
              "id": 1057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3562:0:7"
            },
            "scope": 1334,
            "src": "3521:1006:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1189,
              "nodeType": "Block",
              "src": "5191:375:7",
              "statements": [
                {
                  "assignments": [
                    1148
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1148,
                      "mutability": "mutable",
                      "name": "staker",
                      "nameLocation": "5217:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1189,
                      "src": "5202:21:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                        "typeString": "struct StakingPlatform.Staker"
                      },
                      "typeName": {
                        "id": 1147,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1146,
                          "name": "Staker",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 936,
                          "src": "5202:6:7"
                        },
                        "referencedDeclaration": 936,
                        "src": "5202:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                          "typeString": "struct StakingPlatform.Staker"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1152,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1149,
                      "name": "stakers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 941,
                      "src": "5226:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$936_storage_$",
                        "typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
                      }
                    },
                    "id": 1151,
                    "indexExpression": {
                      "id": 1150,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1141,
                      "src": "5234:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5226:13:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Staker_$936_storage",
                      "typeString": "struct StakingPlatform.Staker storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5202:37:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1153,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1148,
                        "src": "5254:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                          "typeString": "struct StakingPlatform.Staker storage pointer"
                        }
                      },
                      "id": 1154,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 931,
                      "src": "5254:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5271:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5254:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1161,
                  "nodeType": "IfStatement",
                  "src": "5250:72:7",
                  "trueBody": {
                    "id": 1160,
                    "nodeType": "Block",
                    "src": "5274:48:7",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1157,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1148,
                            "src": "5296:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                              "typeString": "struct StakingPlatform.Staker storage pointer"
                            }
                          },
                          "id": 1158,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewards",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 935,
                          "src": "5296:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1145,
                        "id": 1159,
                        "nodeType": "Return",
                        "src": "5289:21:7"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1163
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1163,
                      "mutability": "mutable",
                      "name": "timeDifference",
                      "nameLocation": "5342:14:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1189,
                      "src": "5334:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1162,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5334:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1169,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1164,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5359:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5359:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "id": 1166,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1148,
                        "src": "5377:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                          "typeString": "struct StakingPlatform.Staker storage pointer"
                        }
                      },
                      "id": 1167,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastUpdateTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 933,
                      "src": "5377:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5359:39:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5334:64:7"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1170,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1148,
                        "src": "5429:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                          "typeString": "struct StakingPlatform.Staker storage pointer"
                        }
                      },
                      "id": 1171,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 935,
                      "src": "5429:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1179,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1177,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1175,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1172,
                                      "name": "timeDifference",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1163,
                                      "src": "5461:14:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 1173,
                                        "name": "staker",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1148,
                                        "src": "5478:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                                          "typeString": "struct StakingPlatform.Staker storage pointer"
                                        }
                                      },
                                      "id": 1174,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "amount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 931,
                                      "src": "5478:13:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5461:30:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1176,
                                    "name": "apr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 918,
                                    "src": "5494:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5461:36:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1178,
                                  "name": "accelerator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 924,
                                  "src": "5500:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5461:50:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1180,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5460:52:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1183,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130303030",
                                  "id": 1181,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5533:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10000_by_1",
                                    "typeString": "int_const 10000"
                                  },
                                  "value": "10000"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1182,
                                  "name": "SECONDS_IN_YEAR",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 921,
                                  "src": "5541:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5533:23:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1184,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5532:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5460:97:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1186,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5459:99:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5429:129:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1145,
                  "id": 1188,
                  "nodeType": "Return",
                  "src": "5409:149:7"
                }
              ]
            },
            "documentation": {
              "id": 1139,
              "nodeType": "StructuredDocumentation",
              "src": "4535:580:7",
              "text": " @notice Calcula las recompensas acumuladas para un usuario usando APR y un factor de aceleración.\n @param user Dirección del usuario.\n @return La cantidad total de recompensas acumuladas.\n Fórmula base:\n   rewards = recompensas previas +\n     (timeDifference * staker.amount * apr * accelerator) / (10000 * SECONDS_IN_YEAR)\n Donde:\n   - apr/10000 es el APR anual en forma fraccionaria (por ejemplo, 1250 -> 0.125).\n   - accelerator = 1 => sin aceleración, 2 => doble de rápido, etc."
            },
            "functionSelector": "64ab8675",
            "id": 1190,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateRewards",
            "nameLocation": "5130:16:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1141,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "5155:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "5147:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5147:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5146:14:7"
            },
            "returnParameters": {
              "id": 1145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1144,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "5182:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5182:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5181:9:7"
            },
            "scope": 1334,
            "src": "5121:445:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1243,
              "nodeType": "Block",
              "src": "5935:498:7",
              "statements": [
                {
                  "body": {
                    "id": 1237,
                    "nodeType": "Block",
                    "src": "5999:406:7",
                    "statements": [
                      {
                        "assignments": [
                          1210
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1210,
                            "mutability": "mutable",
                            "name": "stakerAddr",
                            "nameLocation": "6022:10:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1237,
                            "src": "6014:18:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1209,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6014:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1214,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1211,
                            "name": "stakerAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 944,
                            "src": "6035:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1213,
                          "indexExpression": {
                            "id": 1212,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "6051:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6035:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6014:39:7"
                      },
                      {
                        "assignments": [
                          1217
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1217,
                            "mutability": "mutable",
                            "name": "staker",
                            "nameLocation": "6083:6:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1237,
                            "src": "6068:21:7",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                              "typeString": "struct StakingPlatform.Staker"
                            },
                            "typeName": {
                              "id": 1216,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1215,
                                "name": "Staker",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 936,
                                "src": "6068:6:7"
                              },
                              "referencedDeclaration": 936,
                              "src": "6068:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                                "typeString": "struct StakingPlatform.Staker"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1221,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1218,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 941,
                            "src": "6092:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$936_storage_$",
                              "typeString": "mapping(address => struct StakingPlatform.Staker storage ref)"
                            }
                          },
                          "id": 1220,
                          "indexExpression": {
                            "id": 1219,
                            "name": "stakerAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1210,
                            "src": "6100:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6092:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$936_storage",
                            "typeString": "struct StakingPlatform.Staker storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6068:43:7"
                      },
                      {
                        "expression": {
                          "id": 1228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1222,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1217,
                              "src": "6196:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                                "typeString": "struct StakingPlatform.Staker storage pointer"
                              }
                            },
                            "id": 1224,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rewards",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 935,
                            "src": "6196:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1226,
                                "name": "stakerAddr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1210,
                                "src": "6230:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1225,
                              "name": "calculateRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1190,
                              "src": "6213:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 1227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6213:28:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6196:45:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1229,
                        "nodeType": "ExpressionStatement",
                        "src": "6196:45:7"
                      },
                      {
                        "expression": {
                          "id": 1235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1230,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1217,
                              "src": "6354:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$936_storage_ptr",
                                "typeString": "struct StakingPlatform.Staker storage pointer"
                              }
                            },
                            "id": 1232,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastUpdateTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 933,
                            "src": "6354:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1233,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "6378:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6378:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6354:39:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1236,
                        "nodeType": "ExpressionStatement",
                        "src": "6354:39:7"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1202,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1199,
                      "src": "5966:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1203,
                        "name": "stakerAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 944,
                        "src": "5970:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5970:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5966:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1238,
                  "initializationExpression": {
                    "assignments": [
                      1199
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1199,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5959:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1238,
                        "src": "5951:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1198,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5951:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1201,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5963:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5951:13:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5994:3:7",
                      "subExpression": {
                        "id": 1206,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1199,
                        "src": "5994:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1208,
                    "nodeType": "ExpressionStatement",
                    "src": "5994:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "5946:459:7"
                },
                {
                  "expression": {
                    "id": 1241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1239,
                      "name": "apr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 918,
                      "src": "6415:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1240,
                      "name": "_apr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1193,
                      "src": "6421:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6415:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1242,
                  "nodeType": "ExpressionStatement",
                  "src": "6415:10:7"
                }
              ]
            },
            "documentation": {
              "id": 1191,
              "nodeType": "StructuredDocumentation",
              "src": "5574:306:7",
              "text": " @notice Permite al owner actualizar el APR.\n Antes de asignar el nuevo APR, liquida las recompensas acumuladas de todos los stakers\n usando el APR anterior y actualiza su lastUpdateTime.\n @param _apr Nuevo APR en basis points (por ejemplo, 3500 para 35.00% anual)."
            },
            "functionSelector": "854303cf",
            "id": 1244,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1196,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1195,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "5925:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5925:9:7"
              }
            ],
            "name": "setAPR",
            "nameLocation": "5895:6:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1193,
                  "mutability": "mutable",
                  "name": "_apr",
                  "nameLocation": "5910:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1244,
                  "src": "5902:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5902:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5901:14:7"
            },
            "returnParameters": {
              "id": 1197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5935:0:7"
            },
            "scope": 1334,
            "src": "5886:547:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1256,
              "nodeType": "Block",
              "src": "6690:45:7",
              "statements": [
                {
                  "expression": {
                    "id": 1254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1252,
                      "name": "accelerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 924,
                      "src": "6701:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1253,
                      "name": "_accelerator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1247,
                      "src": "6715:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6701:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1255,
                  "nodeType": "ExpressionStatement",
                  "src": "6701:26:7"
                }
              ]
            },
            "documentation": {
              "id": 1245,
              "nodeType": "StructuredDocumentation",
              "src": "6441:178:7",
              "text": " @notice Permite al owner actualizar el factor de aceleración (accelerator).\n @param _accelerator Nuevo factor de aceleración (1 = sin aceleración)."
            },
            "functionSelector": "1ce485a4",
            "id": 1257,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1250,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1249,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "6680:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "6680:9:7"
              }
            ],
            "name": "setAccelerator",
            "nameLocation": "6634:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1247,
                  "mutability": "mutable",
                  "name": "_accelerator",
                  "nameLocation": "6657:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1257,
                  "src": "6649:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6649:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6648:22:7"
            },
            "returnParameters": {
              "id": 1251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6690:0:7"
            },
            "scope": 1334,
            "src": "6625:110:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1285,
              "nodeType": "Block",
              "src": "7226:155:7",
              "statements": [
                {
                  "assignments": [
                    1266
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1266,
                      "mutability": "mutable",
                      "name": "rewards",
                      "nameLocation": "7245:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1285,
                      "src": "7237:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1265,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7237:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1270,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1268,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1260,
                        "src": "7272:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1267,
                      "name": "calculateRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1190,
                      "src": "7255:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 1269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7255:22:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7237:40:7"
                },
                {
                  "assignments": [
                    1272
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1272,
                      "mutability": "mutable",
                      "name": "usdtValue",
                      "nameLocation": "7296:9:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1285,
                      "src": "7288:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1271,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7288:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1282,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1273,
                            "name": "rewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1266,
                            "src": "7309:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1274,
                            "name": "FAKE_RWD_PRICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 929,
                            "src": "7319:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7309:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1276,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7308:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_100000000_by_1",
                            "typeString": "int_const 100000000"
                          },
                          "id": 1279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 1277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7338:2:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "38",
                            "id": 1278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7344:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_8_by_1",
                              "typeString": "int_const 8"
                            },
                            "value": "8"
                          },
                          "src": "7338:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000_by_1",
                            "typeString": "int_const 100000000"
                          }
                        }
                      ],
                      "id": 1280,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7337:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000_by_1",
                        "typeString": "int_const 100000000"
                      }
                    },
                    "src": "7308:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7288:58:7"
                },
                {
                  "expression": {
                    "id": 1283,
                    "name": "usdtValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1272,
                    "src": "7364:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1264,
                  "id": 1284,
                  "nodeType": "Return",
                  "src": "7357:16:7"
                }
              ]
            },
            "documentation": {
              "id": 1258,
              "nodeType": "StructuredDocumentation",
              "src": "6743:403:7",
              "text": " @notice Obtiene el valor en USDT de las recompensas acumuladas para un usuario.\n @param user Dirección del usuario.\n @return El valor de las recompensas en USDT.\n Para pruebas, se utiliza un valor ficticio (FAKE_RWD_PRICE) que define el precio de RWD en USDT.\n En este caso, FAKE_RWD_PRICE = 5000000, lo que significa que 1 RWD equivale a $0.05."
            },
            "functionSelector": "f6e2d02b",
            "id": 1286,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardValueInUSDT",
            "nameLocation": "7161:20:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1260,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "7190:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1286,
                  "src": "7182:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7182:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7181:14:7"
            },
            "returnParameters": {
              "id": 1264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1263,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1286,
                  "src": "7217:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7217:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7216:9:7"
            },
            "scope": 1334,
            "src": "7152:229:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1332,
              "nodeType": "Block",
              "src": "7687:316:7",
              "statements": [
                {
                  "assignments": [
                    1293
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1293,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "7706:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1332,
                      "src": "7698:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1292,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7698:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1296,
                  "initialValue": {
                    "expression": {
                      "id": 1294,
                      "name": "stakerAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 944,
                      "src": "7715:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 1295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "7715:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7698:39:7"
                },
                {
                  "body": {
                    "id": 1330,
                    "nodeType": "Block",
                    "src": "7785:211:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1307,
                              "name": "stakerAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 944,
                              "src": "7804:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1309,
                            "indexExpression": {
                              "id": 1308,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1298,
                              "src": "7820:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7804:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1310,
                            "name": "stakerAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1289,
                            "src": "7826:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7804:32:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1329,
                        "nodeType": "IfStatement",
                        "src": "7800:185:7",
                        "trueBody": {
                          "id": 1328,
                          "nodeType": "Block",
                          "src": "7838:147:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 1320,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1312,
                                    "name": "stakerAddresses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 944,
                                    "src": "7857:15:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1314,
                                  "indexExpression": {
                                    "id": 1313,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1298,
                                    "src": "7873:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7857:18:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 1315,
                                    "name": "stakerAddresses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 944,
                                    "src": "7878:15:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1319,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1318,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1316,
                                      "name": "length",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1293,
                                      "src": "7894:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 1317,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7903:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "7894:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7878:27:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "7857:48:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1321,
                              "nodeType": "ExpressionStatement",
                              "src": "7857:48:7"
                            },
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 1322,
                                    "name": "stakerAddresses",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 944,
                                    "src": "7924:15:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1324,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "pop",
                                  "nodeType": "MemberAccess",
                                  "src": "7924:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                    "typeString": "function (address[] storage pointer)"
                                  }
                                },
                                "id": 1325,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7924:21:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1326,
                              "nodeType": "ExpressionStatement",
                              "src": "7924:21:7"
                            },
                            {
                              "id": 1327,
                              "nodeType": "Break",
                              "src": "7964:5:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1301,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1298,
                      "src": "7768:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1302,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1293,
                      "src": "7772:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7768:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1331,
                  "initializationExpression": {
                    "assignments": [
                      1298
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1298,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7761:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1331,
                        "src": "7753:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1297,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7753:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1300,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7765:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7753:13:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7780:3:7",
                      "subExpression": {
                        "id": 1304,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "7780:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1306,
                    "nodeType": "ExpressionStatement",
                    "src": "7780:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "7748:248:7"
                }
              ]
            },
            "documentation": {
              "id": 1287,
              "nodeType": "StructuredDocumentation",
              "src": "7389:241:7",
              "text": " @dev Función interna para remover una dirección del array stakerAddresses.\n Se utiliza cuando un usuario realiza unstake y ya no tiene tokens apostados.\n @param stakerAddr Dirección del staker a remover."
            },
            "id": 1333,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeStaker",
            "nameLocation": "7645:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1289,
                  "mutability": "mutable",
                  "name": "stakerAddr",
                  "nameLocation": "7666:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1333,
                  "src": "7658:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7658:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7657:20:7"
            },
            "returnParameters": {
              "id": 1291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7687:0:7"
            },
            "scope": 1334,
            "src": "7636:367:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1335,
        "src": "649:7357:7",
        "usedErrors": []
      }
    ],
    "src": "33:7975:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x103266Ac16700159F23406679e833ab039A5980c",
      "transactionHash": "0x38894f8a7f6ba9e78a060965161675f3d1a62ef56a1a4f61c976200808137f66"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-02-24T15:55:35.995Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "Contrato para hacer staking de tokens y generar recompensas según un APR configurable.      Además, se agrega un factor de aceleración (accelerator) para simular recompensas más rápidas.",
    "kind": "dev",
    "methods": {
      "calculateRewards(address)": {
        "params": {
          "user": "Dirección del usuario."
        },
        "returns": {
          "_0": "La cantidad total de recompensas acumuladas. Fórmula base:   rewards = recompensas previas +     (timeDifference * staker.amount * apr * accelerator) / (10000 * SECONDS_IN_YEAR) Donde:   - apr/10000 es el APR anual en forma fraccionaria (por ejemplo, 1250 -> 0.125).   - accelerator = 1 => sin aceleración, 2 => doble de rápido, etc."
        }
      },
      "constructor": {
        "details": "Constructor que inicializa el contrato.",
        "params": {
          "_apr": "APR inicial en basis points (por ejemplo, 1250 para 12.50% anual).",
          "_rewardToken": "Dirección del contrato RewardToken.",
          "_stakingToken": "Dirección del contrato StakingToken."
        }
      },
      "getRewardValueInUSDT(address)": {
        "params": {
          "user": "Dirección del usuario."
        },
        "returns": {
          "_0": "El valor de las recompensas en USDT. Para pruebas, se utiliza un valor ficticio (FAKE_RWD_PRICE) que define el precio de RWD en USDT. En este caso, FAKE_RWD_PRICE = 5000000, lo que significa que 1 RWD equivale a $0.05."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setAPR(uint256)": {
        "params": {
          "_apr": "Nuevo APR en basis points (por ejemplo, 3500 para 35.00% anual)."
        }
      },
      "setAccelerator(uint256)": {
        "params": {
          "_accelerator": "Nuevo factor de aceleración (1 = sin aceleración)."
        }
      },
      "stake(uint256)": {
        "params": {
          "amount": "Cantidad de tokens a apostar."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "StakingPlatform",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "calculateRewards(address)": {
        "notice": "Calcula las recompensas acumuladas para un usuario usando APR y un factor de aceleración."
      },
      "getRewardValueInUSDT(address)": {
        "notice": "Obtiene el valor en USDT de las recompensas acumuladas para un usuario."
      },
      "setAPR(uint256)": {
        "notice": "Permite al owner actualizar el APR. Antes de asignar el nuevo APR, liquida las recompensas acumuladas de todos los stakers usando el APR anterior y actualiza su lastUpdateTime."
      },
      "setAccelerator(uint256)": {
        "notice": "Permite al owner actualizar el factor de aceleración (accelerator)."
      },
      "stake(uint256)": {
        "notice": "Permite a los usuarios apostar tokens."
      },
      "unStake()": {
        "notice": "Permite a los usuarios retirar sus tokens apostados junto con las recompensas."
      }
    },
    "version": 1
  }
}